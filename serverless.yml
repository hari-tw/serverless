frameworkVersion: ">=1.15.1 <2.0.0"
service: "${self:provider.environment.SERVICE}"

# Custom variables
custom:
  stage: "${opt:stage, self:provider.stage}"
  babelPresets:
    - env
  s3Bucket: ${self:provider.environment.S3_BUCKET}
  cognitoPoolId: abc

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  stage: dev
  runtime: nodejs6.10
  environment: ${file(./env.yml):${self:custom.stage}}
  region: ${self:provider.environment.REGION}
  profile: ${self:provider.environment.PROFILE}
  timeout: 30
  memorySize: 128

  iamRoleStatements: # Permissions for all of your functions can be set here
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:GetObjectVersion
        - s3:PutObject
        - s3:DeleteObject
      Resource: arn:aws:s3:::${self:custom.s3Bucket}/*

functions:
  public:
    handler: lambda/public.public

# The `Resources` your `Functions` use.  Raw AWS CloudFormation goes in here.
resources:
  Resources:
    ## S3 Bucket
    WebAppS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3Bucket}
        # AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    ## S3 Bucket Policies to allow all files inside the Bucket to be avaialble to CloudFront
    WebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: WebAppS3Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
                # - s3:GetObjectAcl
                # - s3:GetObjectVersion
                # - s3:PutObject
                # - s3:DeleteObject
              Resource: arn:aws:s3:::${self:custom.s3Bucket}/*

plugins:
  # - serverless-babel-plugin
  - serverless-single-page-app-plugin

package:
  exclude:
    - package.json
    - tmp/**
    - .git/**
  include:
    - lib/**
    - node_modules
